@import "global.css";

body {
    color: rgb(var(--text));
    font-size: 1.5em;
    background: rgb(var(--background));
}

/* ? okay hear me out, I found out now, how siblings selector work, so basicaly: 
    * if you were to use +; example: h1 + p {} - you'd have selected an element that is right after the h1
    * whereas if you had used ~ it wouldn't matter where the sibling is, as long as its in the same parent, it would've selected it. 
    * so, if you want to choose sibling element there are atleast 2 "arguments" required: first - element off of which you want to choose next sibling '+' second - the sibling element you want to choose.
    ? ^ too many words, '+' selects sibling after 1st arg, ~ selects any sibling of same type as 2nd arg when it appears after 1st arg
    * .. oh btw i dont even know if that sentence exists or if its atleast correct    -->   -->     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^, please correct me if im wrong (id like to know) and uhh I know I had milion different ways to say that but jsut felt like using this.

    oh and one more thing, if you'd want to choose parent of an element, lets say a parent element of something that has a class... toggled. and you dont want to create another class (Because you shouldnt or you atleast should minimize their amount) to select that element that has a child with that class,
    THEN you want to use something like this; parent:has(.toggled), you can even read it clearly out of syntax what it does, but be careful, accidently typing space between: parent :has(.toggled) - would select ALL CHILDREN from that parent that have 'toggled' class
*/

/* oh and just right now after I wrote this, found out we can add our custom comments formatting, like if we'd used $ for something within comment */
/* & go to file extensions, click cogwheel.. cogwheel? wasnt there a different word for that? anyway.. and then the setting at the bottom: tags
open that up and then where the tags are, paste in this thing below, after you do that, return to this file and check out line above ^^^ @PiwkoM

,
        {
            "tag": "&",
            "color": "#b1ae17",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": true,
            "italic": false
        }

*/

header {
    text-align: center;
    height: 95svh;
    background: rgb(var(--primary));
    display: flex;
    gap: 0.5rem;
    flex-direction: column;
    /* flex-direction: row;
    flex-wrap: wrap; */
    box-shadow: 0px 0px 5px 4px rgb(var(--primary));
}

header > hgroup {
    display: flex;
    flex-basis: 1;
    flex-grow: 3;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

header > hgroup > h1 {
    padding-bottom: 1rem;
    font-size: 4.5rem;
}

header > hgroup > p {
    text-wrap: balance;
    line-height: 1.5;
    font-size: 1.75rem;
    text-transform: capitalize;
    letter-spacing: 0.5px;
}

header > menu {
    padding: 0;
    flex-grow: 1;
}

header > menu > nav {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    gap: 1rem;
}

header > menu > nav > a {
    color: rgb(var(--text-900));
    font-size: 1.3rem;
    font-weight: bold;
    padding: 1rem;
    height: 5rem;
    aspect-ratio: 4/1;
    background: rgb(var(--background-50));
    word-break: break-word;
    border-radius: 0.3rem;
    border-bottom: 5px solid rgb(var(--secondary));
    box-shadow: 0px 0px 3px 0.5px rgba(var(--primary-500),0.5);
    transition: all 0.175s ease-in-out;
    text-transform: capitalize;
}

header > menu > nav > a:hover,
header > menu > nav > a:focus-visible {
    transform: translateY(-10px);
    border-bottom: 6px solid rgb(var(--accent-500));
    box-shadow: 0px 4px 15px 0.1px rgba(var(--primary-600), 0.9);
    background: rgb(var(--background-100));
    color: rgb(var(--accent-500));
}

/*! testing different color scheme for button, recomment/uncomment below code to get old yellow version/
/* header a {
    color: rgb(var(--text-900));
    font-size: 1.3rem;
    font-weight: bold;
    margin: 0rem;
    padding: 1rem;
    height: 5rem;
    aspect-ratio: 4/1;
    background: rgb(var(--background-200));
    flex-grow: 0;
    word-break: break-word;
    border-radius: 0.3rem;
    border-bottom: 5px solid rgb(var(--secondary));
    box-shadow: 0px 0px 3px 0.5px rgba(var(--primary-500),0.5);
    transition: all 0.175s ease-in-out;
}

header a:hover {
    transform: translateY(-10px);
    border-bottom: 6px solid rgb(var(--secondary-300));
    box-shadow: 0px 4px 15px 0.1px rgba(var(--primary-600), 0.9);
    background: rgb(var(--background-500));
    color: rgb(var(--secondary-500));
} */

header a:link,
nav a:link {
    text-decoration: none;
}

/*
idea for background: get b-roll footage/images of some book activities (reading,handling,etc), set background to opaque,
roll them mfs like a movie

aight bet >:)
get them images first tho
we make it npc-ahh website
*/

/* & Stara stylizacja in case of backup or idk */
/* #nawigacja { /* //nadal trzeba zmienić nową booooo wielkości są różne w zależności od ulozenia oraz wielkosci strony, mimo to i tak ledwo widoczne ale sa
    width: 80%;
    margin: 2rem auto;
    display: grid;
    gap: 3rem;
    grid-template-columns: repeat(auto-fill, minmax(max(15rem, 20%), 1fr));
    word-wrap: break-word;
}

#nawigacja > a {
    border: 1px solid transparent;
    color: rgb(var(--text-900));
    background: rgba(var(--primary-400),0.2); 
    text-align:center;
    padding: 1.7rem;
    aspect-ratio: 2/1;
    font-size: 1.3rem;
    border-radius: 0.3rem;
    box-shadow: 0px 0px 3px 0.05px black;
    transition: all 0.2s ease-in-out;
}

#nawigacja > a:hover{
    transform: translateY(-5px);
    background: rgba(var(--primary-300),1);
    color: rgb(var(--text-800));
    border: 1px solid rgba(var(--primary-300),1);
    border-bottom: 5px solid rgb(var(--primary-400));   
    box-shadow: 0px 5px 5px 1px rgba(var(--accent-700),0.5);
} */

/* * Imo nawigacja teraz dziala idealnie idk bout you, niestety prostokatne przyciski ale it is what it is, lepiek wygladaja teraz bo nie ma za duzo niewykorzystanego miejsca */

#nawigacja { /* ! BRO, idk how, but i commented the grid stuff right? all the 5 bottom lines in this selection + first one in next selection and go take a break, come back and it works as it should wtf. */
    width: 80%;
    margin: 2rem auto;
    display: grid;
    gap: 3rem;
    grid-template-columns: repeat(auto-fit, minmax(max(15rem, 15%), 1fr)); /* !!!! THIS HAS TO BE LEFT ON 'auto-fit' */
    word-wrap: break-word;
    /* place-items: center stretch; */
    /* justify-items: center; */
    /* align-content: center; */
    /* align-items: center; */
    /* grid-auto-columns: auto; */
    /* & i love grid... for grid you actually need to learn stuff unlike flex.. well actually flex is .. also requires some learning, as youve seen at the start of our work.. i wasnt doing well with it after quite a break */
}

#nawigacja > a {
    /* align-self: center; */
    border-bottom: 5px solid transparent; /* * this is now required here for it to not break? */
    color: rgb(var(--text-900));
    background: rgba(var(--primary-400), 0.2); 
    text-align: center;
    padding: 1.7rem;
    /* aspect-ratio: 3/1; */ /* ? WHY THIS RUIN ALL ??!?!?! */
    border-radius: 0.3rem;
    box-shadow: 0px 0px 3px 0.05px black;
    transition: all 0.2s ease-in-out;
}

#nawigacja > a:hover,
#nawigacja > a:focus-visible {
    transform: translateY(-5px);
    background: rgba(var(--primary-300), 1);
    color: rgb(var(--text-800));
    border-bottom: 5px solid rgb(var(--primary-400));   
    box-shadow: 0px 5px 5px 1px rgba(var(--accent-700), 0.5);
}

search > form {
    display: flex;
    justify-content: center;
    width: 100%;
    margin: 0.5rem;
    margin-inline: auto;
}

search > form > input[type="search"] {
    padding: 0.7rem;
    flex-basis: 100%;
    border: none;
    border-bottom: 1px solid black;
    outline: none;
    border-top-left-radius: 2px;
    border-bottom-left-radius: 2px;
}

search > form > input[type="submit"] {
    padding: 0.5rem;
    border: none;
    border-bottom: 1px solid black;
    flex-basis: 1;
    border-top-right-radius: 2px;
    border-bottom-right-radius: 2px;
}

search > form > input::placeholder {
    text-align: center;
}

search > form:has(input[type="search"]:focus-visible) {
    outline: auto;
    outline-color: transparent;
    outline-width: 0.1px;
    outline-offset: 3px;
    border-radius: 2px;
}

main {
    margin-inline: auto;
    max-width: calc(100% - 4rem);
}

.browse-wrapper {
    padding: 1rem;
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

/* a:has(.offer) { */
.offer {
    /* color: inherit;
    text-decoration: none; */
    flex-basis: 100%;
    /* max-width: calc(100% - 2rem); */
    margin-inline: auto;
    word-break: break-word;
    background: rgb(var(--accent-200));
    border-radius: 3px;
    padding: 1rem;
}

.offer details summary {
    list-style-type: circle;
}

.offer details[open] summary {
    list-style-type: disc;
}

.offer-date {
    margin-top: 1rem;
    display: flex;
    justify-content: space-between;
    font-size: 0.8rem;
}

.offer:focus {
    outline: 5px solid black;
}

/* .offer * {
    text-wrap: wrap;
} */

/**
 * @see 
 * https://reference.codeproject.com/css/:any 
 * 
 * :read-only / :read-write
 * :where
 * :in-range
 * :increment / :decrement
 * ::first-letter / ::first-line
 * :any-link
 * :default
 * :empty / :blank
 * ::target-text
 * 

*/